# 2. Реалізуйте класи конкретних спостерігачів, наприклад, `DisplayCurrentConditions`,
# `DisplayStatistics` та `DisplayForecast`, які будуть реагувати на оновлення погодних даних.

# 3. Створіть клас `WeatherData`, який надаватиме дані про поточну погоду та
# повідомлятиме зареєстрованих спостерігачів про нові дані.

# 4. Реалізуйте методи `register_observer` та `remove_observer` у класі `WeatherData`,
# щоб спостерігачі могли підписуватися та відписуватися від оновлень.

# 5. У методі `set_measurements` класу `WeatherData` оновлюйте значення температури,
# вологості та тиску. Потім повідомляйте всіх зареєстрованих спостерігачів,
# викликаючи їх методи update і передаючи їм нові дані.

# 6. Створіть екземпляри класів спостерігачів та об'єкт класу `WeatherData`.
# Зареєструйте спостерігачів в об'єкті `WeatherData` та змініть погодні дані.
# Переконайтеся, що спостерігачі отримують повідомлення та реагують на зміни.


class Observer:
    def update(self, t, w, p):
        pass
